# Change the language so that messages are displayed in the selected language.
# The language is also used for formatting dates such as setting the timezone
# from the language, displaying the date and time correctly.
#
# Available languages:
#   default = Katan will attempt to use the machine's default if available.
#   en = English
#   pt-BR = Português (Brasil)
locale = default

# Time zone used to transform dates to local dates according to the time zone.
# Leave "default" to use the machine's default.
timezone = default

#  ______               _
#  |  _  \             | |
#  | | | |  ___    ___ | | __  ___  _ __
#  | | | | / _ \  / __|| |/ / / _ \| '__|
#  | |/ / | (_) || (__ |   < |  __/| |
#  |___/   \___/  \___||_|\_\ \___||_|
#
# An open source platform for building, deploying, and managing containerized applications.
# Katan uses Docker to run servers in isolated environments with their own networks and environment.
#
# It will not be possible to boot the Katan if the Docker is not configured correctly,
# a series of alerts will be sent to the console alerting and guiding you to a secure configuration.
#
# We strongly recommend that you enable the TLS option of the configuration.
# Reference: https://docs.docker.com/
docker {
  # Host address that will point to your Docker server.
  # This address is platform-dependent (e.g.: use "tcp://localhost:2375" for Windows), so if you
  # don't enter an id that follows the pattern for the current platform, it will obviously result in an error.
  host = "unix:///var/run/docker.sock"

  # "By default, Docker runs through a non-networked UNIX socket.
  # It can also optionally communicate using an HTTP socket.
  # If you need Docker to be reachable through the network in a safe manner,
  # you can enable TLS and pointing Docker’s trusted CA certificate.
  #
  # In the daemon mode, it only allows connections from clients authenticated by a certificate signed by that CA.
  # In the client mode, it only connects to servers with a certificate signed by that CA."
  tls {
    verify = false
    certPath = path/to/tls/cert
  }

  properties {
    connectTimeout = 60000
    readTimeout = 60000
  }
}

#  ______            _  _
#  | ___ \          | |(_)
#  | |_/ /  ___   __| | _  ___
#  |    /  / _ \ / _` || |/ __|
#  | |\ \ |  __/| (_| || |\__ \
#  \_| \_| \___| \__,_||_||___/
#
# Redis is an in-memory database that persists on disk.
# Katan uses Redis to store values that can be distributed
# between networks and for validation by comparing tokens.
#
# Redis is optional and is not required to run the Katan, will be used if enabled (use = true).
# *To use this functionality you need to have Redis installed on your machine.*
#
# Reference: http://redis.io/
redis {
  # Should we use Redis for caching?
  use = true

  # Redis connection address.
  host = localhost
}

#  ______         _           _
#  |  _  \       | |         | |
#  | | | |  __ _ | |_   __ _ | |__    __ _  ___   ___
#  | | | | / _` || __| / _` || '_ \  / _` |/ __| / _ \
#  | |/ / | (_| || |_ | (_| || |_) || (_| |\__ \|  __/
#  |___/   \__,_| \__| \__,_||_.__/  \__,_||___/ \___|
#
# Setting up the database correctly is essential for Katan to run properly.
# Persistent information about accounts, servers and other data is stored in the database.
database {
  dialect = H2

  host = "0.0.0.0:3306"
  database = "katan"

  credentials {
    user = "katan"
    password = ""
  }

  properties {
    serverTimezone = UTC
    useSSL = true
  }
}

#   _____                           _  _
#  /  ___|                         (_)| |
#  \ `--.   ___   ___  _   _  _ __  _ | |_  _   _
#   `--. \ / _ \ / __|| | | || '__|| || __|| | | |
#  /\__/ /|  __/| (__ | |_| || |   | || |_ | |_| |
#  \____/  \___| \___| \__,_||_|   |_| \__| \__, |
#                                            __/ |
#                                           |___/
#
# Katan places a high priority on the security of account
# data, servers and containers that are on the network.
#
# That's why we provide extra configuration options
# so that those who are using it configure to their liking.
security {
  file-system {
    allow-untrusted-access = false
  }

  crypto {
    # Algorithm used for password hashing. Katan by default uses "Bcrypt".
    hash = default

    # Allow external hashing providers such as:
    # provided by plugins that add new hashing algorithms.
    # External providers will need to have this option enabled for their services to be registered.
    allow-external-hash-provider = false
  }
}

webserver {
    # The Katan web server is an extremely useful tool for those who want ease when
    # it comes to managing their Katan accounts, servers and states, however, it is optional.
    # Thanks to the CLI we can do everything possible on Katan through it.
    # If you are not going to use the Web Server, turn it off as this will save your machine's resources.
    enabled = true

    # Katan's Web Server displays all connections on the console,
    # in case your console is being spammed (there are many connections simultaneously),
    # or you just don't want it to display, you can disable this.
    logging = true

    # Designed for servers that run using secure connectors (HTTPS), enabling this option will
    # force all requests made for the insecure connector (HTTP) to be redirected to HTTPS.
    https-redirect = false

    # If you use the web server over reverse proxy, you must enable this option.
    # When under reverse proxy, Katan is not able to identify the source addresses
    # of the requests sent to him. Better known as X-Forwarded-For (XFF) - is a common method for identifying
    # the originating IP address of a client connecting to a web server through an HTTP proxy or load balancer.
    # Reference: https://developer.mozilla.org/docs/Web/HTTP/Headers/X-Forwarded-For
    under-reverse-proxy = false

    # HTTP Strict Transport Security (HSTS) is a web security policy mechanism that helps to protect websites
    # against man-in-the-middle attacks such as protocol downgrade attacks and cookie hijacking.
    # Katan has native support for this, and by default it is enabled, but you can disable it if you want.
    # Reference: https://developer.mozilla.org/docs/Web/HTTP/Headers/Strict-Transport-Security
    hsts = false

    #  ______           _                                  _
    #  |  _  \         | |                                | |
    #  | | | |___ _ __ | | ___  _   _ _ __ ___   ___ _ __ | |_
    #  | | | / _ \ '_ \| |/ _ \| | | | '_ ` _ \ / _ \ '_ \| __|
    #  | |/ /  __/ |_) | | (_) | |_| | | | | | |  __/ | | | |_
    #  |___/ \___| .__/|_|\___/ \__, |_| |_| |_|\___|_| |_|\__|
    #          | |             __/ |
    #          |_|            |___/
    deployment {
      # Web Server host address.
      host = 0.0.0.0

      # Insecure HTTP and WS connector port, default is 80.
      port = 80

      # Secure connector (HTTPS and WSS).
      ssl {
        # Mark as `true` if you want to use the HTTPS connector, remembering that to use this
        # connector it is necessary to have all the fields of the certificate correctly configured
        enabled = false

        # Port to be used, default is 443.
        port = 443

        # Used to store the server keys (both public and private) along with signed cert.
        key-store = /path/to/keystore.jks

        # A certificate alias is the name given to a CA certificate located in the keystore.
        key-alias = myalias

        # The password used to access the keystore file when SSL is enabled and
        # SSL client authentication is enabled on the database server
        key-store-password = mypassword

        # Specifies a password for the private key about to be generated
        private-key-password = mypassword
      }

      # Web server shutdown settings.
      shutdown {
        # The maximum amount of time for activity to cool down (in milliseconds).
        grace-period = 1000

        # The maximum amount of time to wait until server stops gracefully (in milliseconds).
        timeout = 5000
      }

    }


    #   _____   _____  ______   _____
    #  /  __ \ |  _  | | ___ \ /  ___|
    #  | /  \/ | | | | | |_/ / \ `--.
    #  | |     | | | | |    /   `--. \
    #  | \__/\ \ \_/ / | |\ \  /\__/ /
    #   \____/  \___/  \_| \_| \____/
    #
    # Cross Origin Resource Sharing
    #
    # By default, unlike Katan servers, the web server does not run in an isolated Docker container therefore,
    # the network it is on is being exported to the public, configuring CORS is essential
    # so that no unwanted connections go through the Web Server.
    #
    # If you are running the Katan Daemon, allow the configuration of the host on
    # which the Katan Daemon is located so that it has access to the Web Server.
    # Reference: https://developer.mozilla.org/docs/Web/HTTP/CORS
    cors {
      # Allows any network to have access to the Web Server resource sharing network.
      # Set to true if you don't know the origin of the Katan Daemon.
      allowAnyHost = true

      # Hosts that will be allowed through CORS verification.
      # You must specify the panel's address here to authorize it to make requests to the server.
      hosts = [{
        hostname = "localhost:8081"
        schemes = [http, https, ws, wss]
      }]
    }

    #     ___   _    _   _____
    #    |_  | | |  | | |_   _|
    #      | | | |  | |   | |
    #      | | | |/\| |   | |
    #  /\__/ / \  /\  /   | |
    #  \____/   \/  \/    \_/
    #
    # JSON Web Token (JWT) is an open standard (RFC 7519) that defines a compact and self-contained way for
    # securely transmitting information between parties as a JSON object.
    # This information can be verified and trusted because it is digitally signed.
    # JWTs can be signed using a secret (with the HMAC algorithm) or a public/private key pair using RSA or ECDSA.
    # Reference: https://jwt.io/
    jwt {
      # Identifies principal that issued the JWT resource.
      # Change this to your server's static address.
      issuer = "https://katan.com"

      # Each principal intended to process the JWT MUST identify itself with a value in the audience claim.
      # If the principal processing the claim does not identify itself with a value in the "aud"
      # claim when this claim is present, then the JWT MUST be rejected.
      audience = jwt-audience

      # The algorithm (HS256) used to sign the token.
      secret = "12345678"
    }
}